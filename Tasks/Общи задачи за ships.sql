use ships;

--Напишете заявка, която извежда имената на всички кораби без повторения,
--които са участвали в поне една битка и чиито имена започват с C или K.SELECT DISTINCT SHIPFROM OUTCOMESWHERE (SHIP LIKE 'C%' OR SHIP LIKE 'K%') AND BATTLE IS NOT NULL;---------------------------------------SELECT DISTINCT SHIP
FROM SHIPS LEFT JOIN OUTCOMES ON NAME=SHIP
WHERE (NAME LIKE 'C%' OR NAME LIKE 'K%') AND BATTLE IS NOT NULL;

--Напишете заявка, която извежда име и държава на всички кораби, които
--никога не са потъвали в битка (може и да не са участвали)

SELECT DISTINCT NAME, COUNTRY
FROM SHIPS LEFT JOIN OUTCOMES ON SHIPS.NAME = OUTCOMES.SHIP
JOIN CLASSES ON SHIPS.CLASS = CLASSES.CLASS
WHERE RESULT NOT LIKE 'sunk' OR BATTLE IS NULL;

--Напишете заявка, която извежда държавата и броя на потъналите кораби за
--тази държава. Държави, които нямат кораби или имат кораб, но той не е
--участвал в битка, също да бъдат изведени.

SELECT COUNTRY, COUNT(RESULT) AS num_sunk_ships
FROM SHIPS RIGHT JOIN CLASSES ON SHIPS.CLASS = CLASSES.CLASS
LEFT JOIN OUTCOMES ON SHIPS.NAME = OUTCOMES.SHIP
WHERE RESULT LIKE 'sunk' OR BATTLE IS NULL OR SHIPS.NAME IS NULL
GROUP BY COUNTRY;

--Напишете заявка, която извежда име на битките, които са по-мащабни (с
--повече участващи кораби) от битката при Guadalcanal.

SELECT BATTLE
FROM SHIPS JOIN OUTCOMES ON OUTCOMES.SHIP = SHIPS.NAME
JOIN BATTLES ON OUTCOMES.BATTLE = BATTLES.NAME
GROUP BY BATTLE
HAVING COUNT(DISTINCT SHIPS.NAME) > ANY(SELECT COUNT(DISTINCT SHIPS.NAME)
FROM SHIPS JOIN OUTCOMES ON SHIPS.NAME = OUTCOMES.SHIP JOIN
BATTLES ON OUTCOMES.BATTLE = BATTLES.NAME
WHERE BATTLES.NAME = 'Guadalcanal');

--Напишете заявка, която извежда име на битките, които са по-мащабни (с
--повече участващи страни) от битката при Surigao Strait.SELECT BATTLE
FROM SHIPS JOIN OUTCOMES ON OUTCOMES.SHIP = SHIPS.NAME
JOIN BATTLES ON OUTCOMES.BATTLE = BATTLES.NAME
GROUP BY BATTLE
HAVING COUNT(DISTINCT SHIPS.NAME) > ANY(SELECT COUNT(DISTINCT SHIPS.NAME)
FROM SHIPS JOIN OUTCOMES ON SHIPS.NAME = OUTCOMES.SHIP JOIN
BATTLES ON OUTCOMES.BATTLE = BATTLES.NAME
WHERE BATTLES.NAME = 'Surigao Strait');

--Напишете заявка, която извежда имената на най-леките кораби с най-много
--оръдия.

SELECT NAME, DISPLACEMENT, NUMGUNS
FROM SHIPS JOIN CLASSES ON SHIPS.CLASS = CLASSES.CLASS
WHERE DISPLACEMENT <= ALL(SELECT DISPLACEMENT FROM CLASSES) AND
NUMGUNS >= ALL(SELECT NUMGUNS FROM CLASSES
WHERE DISPLACEMENT <= ALL(SELECT DISPLACEMENT FROM CLASSES));
--Изведете броя на корабите, които са били увредени в битка, но са били
--поправени и по-късно са победили в друга битка.SELECT COUNT(S1.NAME) AS 'NUMBER OF SHIPS'FROM SHIPS S1 JOIN OUTCOMES ON S1.NAME = OUTCOMES.SHIPJOIN BATTLES ON BATTLE=BATTLES.NAMEWHERE RESULT = 'damaged' AND DATE <= ANY(SELECT DATE FROM SHIPS S2 JOIN OUTCOMES ON S2.NAME = OUTCOMES.SHIPJOIN BATTLES ON BATTLE=BATTLES.NAMEWHERE RESULT = 'ok' AND S1.NAME = S2.NAME);--Изведете име на корабите, които са били увредени в битка, но са били
--поправени и по-късно са победили в по-мащабна битка (с повече кораби).SELECT S1.NAMEFROM SHIPS S1 JOIN OUTCOMES ON S1.NAME = OUTCOMES.SHIPJOIN BATTLES ON BATTLE=BATTLES.NAMEWHERE RESULT = 'damaged' AND DATE <= ANY(SELECT DATEFROM SHIPS S2 JOIN OUTCOMES ON S2.NAME = OUTCOMES.SHIPJOIN BATTLES ON BATTLE=BATTLES.NAMEWHERE RESULT = 'ok' AND S1.NAME = S2.NAME) AND BATTLE= ANY(SELECT BATTLEFROM SHIPS S1 JOIN OUTCOMES ON S1.NAME=SHIP JOIN BATTLES ON BATTLE=BATTLES.NAMEGROUP BY BATTLEHAVING COUNT(S1.NAME)<ANY(SELECT COUNT(S3.NAME)FROM SHIPS S3 JOIN OUTCOMES ON S3.NAME = SHIP JOIN BATTLES ON BATTLE=BATTLES.NAME));